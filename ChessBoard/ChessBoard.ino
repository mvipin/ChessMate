#include <SoftwareSerial.h>
#include "Utils.h"

move_state_t state;
char legal_moves[LEGAL_MOVES_MAX][5];
uint8_t legal_moves_cnt;
char special_moves[MOVE_TYPE_MAX][5];
bool confirm, hint;

void process_board() {
  if (state == MOVE_RESET) {
    confirm = false;
    hint = false;
  } else if (state == MOVE_START) {
    // Need clue?
    if (hint) {
      hint = false;
      highlight_move(special_moves[MOVE_TYPE_HINT], MAGENTA);
      delay(1000);
    }
    
    // Move finalized?
    if (confirm) {
      confirm = false;
      char move[5];
      if (compute_move(move)) {
        send_response(move);
        state = MOVE_STOP;
        legal_moves_cnt = 0;
        reset_occupancy();
        set_control_pixel(HUMAN, BLACK);
        set_control_pixel(COMPUTER, GREEN);
      } else {
        state = MOVE_RESET;
      }
    }
  } else if ((state == MOVE_COMP) && (confirm)) {
    // TODO: For now, we will just send the ACK assuming the player 
    // moving the pieces on behalf of the computer is doing the right 
    // thing. Eventually, the move should be generated by sensing the board
    send_response(special_moves[MOVE_TYPE_COMP]);
    state = MOVE_STOP;
    confirm = false;
  }
}

void setup() {
  serial_init();
  sensor_init();
  button_init();
  display_init();
  state = MOVE_NONE;

  Serial.begin(9600);
  Serial.println("Welcome to ChessMate!");
}

void loop() {
  scan_serial();
  scan_sensors();
  scan_buttons();
  process_board();
}
